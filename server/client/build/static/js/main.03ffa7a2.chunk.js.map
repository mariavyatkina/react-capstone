{"version":3,"sources":["utils/storage.js","components/Header.tsx","components/Home.tsx","components/AccountInfo.tsx","components/Account.tsx","components/SignIn.tsx","components/SignUp.tsx","components/BackToAccount.tsx","components/SelectedMovie.tsx","components/SelectedMovieList.tsx","components/MovieDetails.tsx","components/Footer.tsx","components/PasswordReset.tsx","components/Movie.tsx","components/MovieList.tsx","components/BrowseMovies.tsx","App.tsx","index.tsx"],"names":["exports","__esModule","setInStorage","getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","obj","console","error","setItem","stringify","Header","className","Home","props","useState","token","setToken","isLoading","setIsLoading","useEffect","log","fetch","process","method","headers","then","res","json","success","to","AccountInfo","user","username","email","isDeleted","onClick","logout","pathname","state","userId","deleteUser","Account","setEmail","setUsername","setIsDeleted","setUserId","catch","message","window","location","reload","alert","category","style","fontSize","margin","padding","dotenv","config","SignIn","signInError","setSignInError","signInEmail","setSignInEmail","signInPassword","setSignInPassword","passwordShown","setPasswordShown","justSignedUp","type","placeholder","value","onChange","event","target","e","preventDefault","body","password","SignUp","signUpError","setSignUpError","signUpUsername","setSignUpUsername","signUpEmail","setSignUpEmail","signUpPassword","setSignUpPassword","setJustSignedUp","BackToAccount","SelectedMovie","movie","imdbID","response","newMovies","movies","filter","setMovies","src","poster_url","alt","SelectedMovieList","useLocation","toLowerCase","length","imdbs","forEach","imdb","Axios","get","title","data","Title","Poster","includes","prevState","map","index","MovieDetails","isFavorited","setIsFavorited","isOnWatchlist","setIsOnWatchlist","movieDetails","toggleAddToFavorites","toggleAddToWatchlist","Year","Rated","Plot","Released","Runtime","Genre","Director","Writer","Actors","Language","Country","Awards","Footer","id","PasswordReset","setPassword","newPassword","setNewPassword","resetPasswordError","isReset","setIsReset","new_password","Movie","setMovieDetails","Response","Type","MovieList","movieList","isSearched","BrowseMovies","movieTitle","setMovieTitle","setIsSearched","Search","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03ffa7a2.chunk.js","sourcesContent":["\"use strict\";\r\nexports.__esModule = true;\r\nexports.setInStorage = exports.getFromStorage = void 0;\r\nfunction getFromStorage(key) {\r\n    if (!key) {\r\n        return null;\r\n    }\r\n    try {\r\n        var valueStr = localStorage.getItem(key);\r\n        if (valueStr) {\r\n            return JSON.parse(valueStr);\r\n        }\r\n        return null;\r\n    }\r\n    catch (err) {\r\n        return null;\r\n    }\r\n}\r\nexports.getFromStorage = getFromStorage;\r\nfunction setInStorage(key, obj) {\r\n    if (!key) {\r\n        console.error(\"Error: Key is missing\");\r\n    }\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj));\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\nexports.setInStorage = setInStorage;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-dark  bg-dark\">\r\n    <nav className=\"navbar-brand p-3 pb-0\" >Movie App</nav>\r\n  </nav>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, {useState, useEffect} from 'react';\r\nimport {Image} from 'react-bootstrap';\r\nimport \"../styles/Home.css\"\r\nimport{\r\n    getFromStorage,\r\n    setInStorage\r\n  } from '../utils/storage';\r\nimport Account from './Account';\r\nimport {Link, Redirect} from 'react-router-dom'\r\n\r\n\r\nexport default function Home(props:any) {\r\n  const[token, setToken] = useState(\"\");\r\n  const[isLoading, setIsLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n      const obj = getFromStorage('the_main_app');\r\n      if(obj && obj.token){\r\n        const {token} = obj;\r\n        console.log(`token = ${token}`)\r\n        // verify the token\r\n        fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/verify?token=` + token,  {\r\n          method: 'POST',\r\n          headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n         }})\r\n        .then(res=> res.json())\r\n        .then(json => {\r\n          if(json.success){\r\n            setToken(token);\r\n            setIsLoading(false);\r\n          }else{\r\n            setIsLoading(false);\r\n          }\r\n        })\r\n        \r\n    \r\n      }\r\n      else{\r\n        setIsLoading(false);\r\n      }\r\n    }, [])\r\n          if(isLoading){\r\n            return (<div><p>Loading...</p></div>)\r\n          }\r\n          if(!token){\r\n            console.log(\"url: \"+ process.env.REACT_APP_IMG_URL_1)\r\n              return(\r\n                <>\r\n                \r\n                <div className=\"container-fluid maindiv text-center\">\r\n                <div className=\"container home-content\">\r\n                    <h1 className=\"display-4\">Welcome to Movie App</h1>\r\n                    <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Eligendi repellat alias distinctio, sed labore fugiat amet iusto suscipit. Numquam eaque doloribus, soluta atque ipsa dicta incidunt eos qui odio quas?</p>\r\n                     <Link className=\"btn btn-primary m-2 p-3\" to=\"/signin\">Sign In</Link>\r\n                     <Link className=\"btn btn-success m-2 p-3\" to=\"/signup\">Sign Up</Link>\r\n                  </div>\r\n                 \r\n              </div>\r\n              </>\r\n              )\r\n          }\r\n          else{\r\n              return(\r\n                <>\r\n                <Redirect to=\"/account\"/>\r\n               <Account/>\r\n              </>\r\n              )\r\n          }\r\n\r\n      }\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport 'whatwg-fetch';\r\nimport{\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../utils/storage';\r\nexport default function AccountInfo(props: any) {\r\n    return (\r\n        <div className=\" card  bg-secondary p-4 mt-2 user-info\">\r\n            <div className=\"card-header\">\r\n                <h5 >Account Info</h5>\r\n    \r\n            </div>\r\n            <div className=\"card-body \">\r\n            \r\n                    <label  className=\"col col-form-label m-2\">Username:</label>\r\n                    <label  className=\"col col-form-label m-2\">{props.user.username}</label> <br/>\r\n                    <label  className=\"col col-form-label m-2\">Email:</label>\r\n                    <label  className=\"col col-form-label m-2\">{props.user.email}</label><br/>\r\n                    <label  className=\"col col-form-label m-2\">Deleted: </label>\r\n                    <label  className=\"col col-form-label m-2\">{(props.user.isDeleted)?(<>Yes</>): (<>No</>)}</label>\r\n        \r\n                <div className=\"row\">\r\n                  <button className=\"col-sm-12 btn btn-success m-2\" onClick={props.logout}>Logout</button>\r\n                  <Link className=\"col-sm-12 btn btn-primary m-2\" to={{pathname:\"/account/password-reset\", state:{userId: props.user.userId}}} >Reset Password</Link>\r\n                  <button className=\"col-sm-12 btn btn-danger m-2\" onClick={props.deleteUser}>Delete Account</button>\r\n                  </div>\r\n               \r\n            </div>\r\n \r\n            </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport 'whatwg-fetch';\r\nimport Home from './Home';\r\n//import {FillStarFill, HeartFill, SkipForwardFill } from 'react-bootstrap-icons';\r\nimport{\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../utils/storage';\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport AccountInfo from './AccountInfo';\r\nimport '../styles/Account.css';\r\nimport Axios from 'axios';\r\nimport dotenv from 'dotenv';\r\nimport SelectedMovieList from './SelectedMovieList';\r\n\r\ndotenv.config();\r\n\r\nexport default function Account(props:any) {\r\n    const[email, setEmail] = useState(\"\");\r\n    const[username, setUsername] = useState(\"\");\r\n    const[isDeleted, setIsDeleted] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [token, setToken] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n  \r\n\r\n    useEffect(() => {\r\n      const obj = getFromStorage('the_main_app');\r\n      if(obj && obj.token){\r\n        const {token} = obj;\r\n        console.log(`token = ${token}`)\r\n        // verify the token\r\n        fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/verify?token=` + token,  {\r\n          method: 'POST',\r\n          headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n         }})\r\n        .then(res=> res.json())\r\n        .then(json => {\r\n          if(json.success){\r\n            setToken(token);\r\n          }\r\n      })\r\n      fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/user/${token}`, {\r\n          method: 'GET',\r\n          headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n             }\r\n      })\r\n      .then(res=> res.json())\r\n      .then(json => {\r\n          if(json.success){\r\n              setUserId(json.userId);\r\n\r\n          }\r\n      })\r\n      .catch(err => {\r\n          console.log(\"error: \" + err)\r\n      })\r\n      fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/${userId}`, {\r\n          method: 'GET',\r\n          headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n             }\r\n      })\r\n      .then(res=> res.json())\r\n      .then(json => {\r\n          if(json.success){\r\n              setEmail(json.email);\r\n              setUsername(json.username);\r\n              setIsDeleted(json.isDeleted);\r\n              setIsLoading(false);\r\n          }\r\n          else{\r\n              setIsLoading(false);\r\n          }\r\n      })\r\n      .catch(err => {\r\n          console.log(`Error: ${err.message}`);\r\n      })\r\n\r\n        }\r\n      else{\r\n        setIsLoading(false);\r\n      }\r\n      },[userId, token])\r\n    function logout() {\r\n        setIsLoading(true);\r\n        // get the localstorage object\r\n        const obj = getFromStorage('the_main_app');\r\n        if (obj && obj.token) {\r\n          // get token from local storage\r\n          const { token } = obj;\r\n    \r\n          // verify token\r\n          fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/logout?token=${token}`, {\r\n            method: 'POST',\r\n            headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n             }\r\n          })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n              console.log(\"Within logout function\")\r\n              if (json.success) {\r\n                setToken(\"\");\r\n                setIsLoading(false);\r\n              } else {\r\n                // some error\r\n                setIsLoading(false);\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(`Error: ${err.message}`)\r\n            })\r\n        } else {\r\n          // there is no token\r\n          setIsLoading(false);\r\n          setToken(\"\");\r\n        }\r\n        console.log(\"Token: \" + token)\r\n        window.location.reload();\r\n        \r\n    }\r\n    function deleteUser(){\r\n      setIsLoading(true);\r\n\r\n      fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/${userId}`, {\r\n        method: 'DELETE',\r\n        headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n         }\r\n      })\r\n      .then(res=> res.json())\r\n      .then(json => {\r\n        if(json.success){\r\n          setIsLoading(false);\r\n          alert(json.message);\r\n          logout();\r\n        }\r\n        else{\r\n          setIsLoading(false);\r\n          console.log(json.message)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setIsLoading(false);\r\n        console.log(`Error : ${err.message}`)\r\n      })\r\n\r\n    }\r\n    const user = {\r\n      email: email,\r\n      username: username,\r\n      isDeleted: isDeleted,\r\n      userId: userId\r\n    }\r\n        if(!token || !userId) {\r\n            return(\r\n              <>\r\n              <Redirect to=\"/\"/>\r\n              <Home/>\r\n                </>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n              \r\n              <div className=\"container-fluid account mt-5 ml-5\">\r\n              <h4 className=\"greeting\"><strong> Hi, <strong className=\"text-danger\">{user.username}</strong></strong></h4>\r\n              <div className=\"row account-content text-center \">\r\n              <div className=\"col-md-3\">\r\n                  <AccountInfo user={user} logout={logout} deleteUser={deleteUser}/>\r\n                </div>\r\n                <div className=\"col-md-6 account-browse\">\r\n                  <Link to=\"account/browse-movies\"><div className=\"container-fluid text-center browse-movies-banner\"><h1 className=\"display-3 \">Browse Movies  </h1></div></Link>\r\n                  <div className=\"buttons-account mt-5\">\r\n                    <Link className=\"btn btn-danger button-account\" to={{pathname:\"/account/favorites\", state:{userId: userId, category: \"Favorites\"}}} style={{fontSize:\"25px\", margin: \"20px\",padding: \"15px 50px\"}}>Favorites</Link>\r\n                    <Link className=\"btn btn-warning button-account\" to={{pathname:\"/account/watchlist\", state:{userId: userId, category: \"Watchlist\"}}} style={{fontSize:\"25px\", margin: \"20px\",padding: \"15px 50px\"}}>Watchlist</Link>\r\n                  </div>\r\n                </div>\r\n                \r\n              </div>\r\n            \r\n             \r\n             \r\n           </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n","import React, {useEffect, useState} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport 'whatwg-fetch';\r\nimport{\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../utils/storage';\r\nimport '../styles/Login.css';\r\nimport Account from './Account';\r\n\r\n\r\nexport default function SignIn(props: any) {\r\n\r\n    const[signInError, setSignInError] = useState(\"\");\r\n    const [signInEmail, setSignInEmail] = useState(\"\");\r\n    const [signInPassword, setSignInPassword] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [token, setToken] = useState(\"\");\r\n    const[passwordShown, setPasswordShown]= useState(false);\r\n\r\n      \r\n      useEffect(() =>{\r\n        if(props.justSignedUp){\r\n          alert(\"You have successfully signed up!\")\r\n        }\r\n        const obj = getFromStorage('the_main_app');\r\n        if(obj && obj.token){\r\n          const {token} = obj;\r\n          console.log(`token = ${token}`)\r\n          // verify the token\r\n          fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/verify?token=` + token,  {\r\n            method: 'POST',\r\n            headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n           }})\r\n          .then(res=> res.json())\r\n          .then(json => {\r\n            if(json.success){\r\n              setToken(token);\r\n              setIsLoading(false);\r\n             \r\n            }else{\r\n             setIsLoading(false);\r\n            }\r\n          })\r\n          \r\n      \r\n        }\r\n        else{\r\n          setIsLoading(false);\r\n        }\r\n      }, [])\r\n    \r\n      \r\n\r\n      function onTextboxChangeSignInEmail (event: any): void {\r\n        setSignInEmail(event.target.value);\r\n      }\r\n      function onTextboxChangeSignPassword(event: any){\r\n        setSignInPassword(event.target.value);\r\n      }\r\n      function toggleShowPassword(e:any){\r\n        e.preventDefault();\r\n        setPasswordShown(!passwordShown);\r\n      }\r\n       function onSignIn(){\r\n        //Post request to backend\r\n\r\n        setIsLoading(true);\r\n    \r\n        fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/signin`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n              email: signInEmail,\r\n              password: signInPassword\r\n            }),\r\n        }).then(res=> res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n              setInStorage('the_main_app', {token: json.token})\r\n              setSignInError(json.message);\r\n              setIsLoading(false);\r\n              setSignInEmail(\"\");\r\n              setSignInPassword(\"\");\r\n              setToken(json.token);\r\n            }\r\n            else{\r\n              setSignInError(json.message);\r\n              setIsLoading(false);\r\n            }\r\n    \r\n        })\r\n    \r\n      }\r\n        if(isLoading){\r\n          return (<div><p>Loading...</p></div>)\r\n        }\r\n        if(!token){\r\n        return(\r\n          <div className=\"container-fluid maindiv\">\r\n          <div className=\"jumbotron login vertical-center horizontal-center col-5\">\r\n            {\r\n            (signInError)?(\r\n              <p>{signInError}</p>\r\n            )\r\n            : null\r\n          }\r\n          <div className=\"container p-6 login-container\">\r\n            <h3>Sign In</h3>\r\n            <form className=\"form mt-2\">\r\n              <div className=\"form-group\">\r\n                <label>Email:</label>\r\n            <input\r\n             className=\"form-control\" \r\n              type=\"email\"\r\n              placeholder=\"email\" \r\n              value={signInEmail}\r\n              onChange={onTextboxChangeSignInEmail}\r\n            ></input><br/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label>Password:</label>\r\n            <input \r\n              className=\"form-control\"\r\n              type={passwordShown ? \"text\" : \"password\"}\r\n              placeholder=\"password\" \r\n              value={signInPassword}\r\n              onChange={onTextboxChangeSignPassword}\r\n            ></input>\r\n             <span\r\n              className=\"badge mt-1 show-password-button\" \r\n              onClick={toggleShowPassword}>\r\n                {(passwordShown)?\r\n                (\"Hide Password\")\r\n                :(\"Show Password\")\r\n                }\r\n              </span>\r\n            </div><br/>\r\n            <button className=\"btn btn-primary\" onClick={onSignIn}>Sign In</button>\r\n           <Link className=\"text-light m-2 \" to=\"/signup\">Sign Up</Link>\r\n           <Link className=\"text-light\" to=\"/\">Back to Home</Link>\r\n            </form>\r\n          </div>\r\n          </div>\r\n           </div>\r\n         )\r\n        }\r\n        return (\r\n          <Redirect to=\"/account\"/>\r\n        );\r\n      }\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport 'whatwg-fetch';\r\nimport{\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../utils/storage';\r\nimport '../styles/Login.css';\r\nimport SignIn from './SignIn';\r\nimport Account from './Account'\r\n\r\n\r\nexport default function SignUp(props:any){\r\n  const[signUpError, setSignUpError] = useState(\"\");\r\n  const [signUpUsername, setSignUpUsername] = useState(\"\");\r\n  const [signUpEmail, setSignUpEmail] = useState(\"\");\r\n  const [signUpPassword, setSignUpPassword] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [token, setToken] = useState(\"\");\r\n  const[justSignedUp, setJustSignedUp] = useState(false);\r\n  const[passwordShown, setPasswordShown]= useState(false);\r\n  \r\n  function onTextboxChangeSignUpUsername(event: any){\r\n    setSignUpUsername(event.target.value);\r\n  }\r\n  function onTextboxChangeSignUpEmail (event: any): void {\r\n    setSignUpEmail(event.target.value);\r\n  }\r\n  function onTextboxChangeSignUpPassword(event: any){\r\n    setSignUpPassword(event.target.value);\r\n  }\r\n  function toggleShowPassword(e:any){\r\n    e.preventDefault();\r\n    setPasswordShown(!passwordShown);\r\n  }\r\n      \r\n  function onSignUp(){\r\n        //Post request to backend\r\n        setIsLoading(true);\r\n        fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/signup`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n              username: signUpUsername,\r\n              email: signUpEmail,\r\n              password: signUpPassword\r\n            }),\r\n        }).then(res=> res.json())\r\n        .then(json => {\r\n          if(json.success){\r\n          setSignUpError(json.message);\r\n          setIsLoading(false);\r\n          setSignUpEmail(\"\");\r\n          setSignUpPassword(\"\");\r\n          setSignUpUsername(\"\");\r\n          setJustSignedUp(true);\r\n            }\r\n            else{\r\n              setSignUpError(json.message);\r\n              setIsLoading(false);\r\n            }\r\n    \r\n        })\r\n      }\r\n      useEffect(() =>{\r\n        const obj = getFromStorage('the_main_app');\r\n        if(obj && obj.token){\r\n          const {token} = obj;\r\n          console.log(`token = ${token}`)\r\n          // verify the token\r\n          fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/verify?token=` + token,  {\r\n            method: 'POST',\r\n            headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n           }})\r\n          .then(res=> res.json())\r\n          .then(json => {\r\n            if(json.success){\r\n              setToken(token);\r\n              setIsLoading(false);\r\n             \r\n            }else{\r\n             setIsLoading(false);\r\n            }\r\n          })\r\n          \r\n      \r\n        }\r\n        else{\r\n          setIsLoading(false);\r\n        }\r\n      }, [])\r\n        if(justSignedUp){\r\n          return (\r\n            <SignIn justSignedUp={justSignedUp}/>\r\n          );\r\n        }\r\n        if(isLoading){\r\n            return (<div><p>Loading...</p></div>)\r\n          }\r\n        if(!token){\r\n        return(\r\n          <div className=\"container-fluid maindiv\">\r\n          <div className=\"jumbotron login col-5 vertical-center \">\r\n             {\r\n                (signUpError)?(\r\n                  <p>{signUpError}</p>\r\n                )\r\n                : null\r\n              }\r\n              <div className=\"container login-container p-6\">\r\n                <h3>Sign Up</h3>\r\n                <form className=\"form mt-2\">\r\n                  <div className=\"form-group col-md-6\">\r\n                    <label>Username: </label>\r\n                <input \r\n                  className=\"form-control\"\r\n                  type=\"text\" \r\n                  placeholder=\"username\" \r\n                  value={signUpUsername}\r\n                  onChange={onTextboxChangeSignUpUsername}\r\n                ></input></div><br/>\r\n                <div className=\"form-group col-md-6\">\r\n                    <label>Email: </label>\r\n                  <input \r\n                    className=\"form-control\"\r\n                    type=\"email\" \r\n                    placeholder=\"email\" \r\n                    value={signUpEmail}\r\n                    onChange={onTextboxChangeSignUpEmail}\r\n                  ></input>\r\n                </div><br/>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Password: </label>\r\n                  <input \r\n                    className=\"form-control\"\r\n                    type={passwordShown ? \"text\" : \"password\"} \r\n                    placeholder=\"password\" \r\n                    value={signUpPassword}\r\n                    onChange={onTextboxChangeSignUpPassword}\r\n                  ></input>\r\n                  <span\r\n              className=\"badge mt-1 mb-1 show-password-button\" \r\n              onClick={toggleShowPassword}>\r\n                {(passwordShown)?\r\n                (\"Hide Password\")\r\n                :(\"Show Password\")\r\n                }\r\n              </span>\r\n                  <br/>  \r\n                </div>\r\n                <button className= \"btn btn-primary\" onClick={onSignUp}>Sign Up</button>\r\n                <Link className=\"text-light m-2 \" to=\"/signin\">Sign In</Link>\r\n                <Link className=\"text-light\" to=\"/\">Back to Home</Link>\r\n                </form>\r\n              </div>\r\n              </div>\r\n              </div>\r\n            \r\n        )}\r\n        return (\r\n            <SignIn justSignedUp={true}/>\r\n          );\r\n    }\r\n\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport default function BackToAccount() {\r\n    return (\r\n        <nav>\r\n            <div><Link className=\"btn btn-success m-2\" to=\"/account\">My Account</Link></div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'whatwg-fetch';\r\n\r\nexport default function SelectedMovie(props:any) {\r\n\r\n    function toggleRemoveMovie(){\r\n        console.log(\"imdbID: \" + props.movie.imdbID)\r\n\r\n        fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/movies/${props.userId}/set-${props.category}/${props.movie.imdbID}`, \r\n        {method: 'PUT',\r\n      headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n         }\r\n      })\r\n      .then(response => response.json())\r\n      .then(json=> {\r\n            if(json.success){\r\n                const newMovies = props.movies.filter((movie:any )=> movie.imdbID !== props.movie.imdbID)\r\n                props.setMovies(newMovies);\r\n            }\r\n      })\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-3 selected-movie\">\r\n            <div className=\"row\">\r\n                    <button className=\"btn btn-dark remove-button\" onClick={toggleRemoveMovie}>\r\n                        Remove</button></div>\r\n            <div className=\"row\">\r\n                    <img \r\n                        src={props.movie.poster_url} \r\n                        alt=\"selected-movie\"/>\r\n                    </div></div>\r\n    )\r\n}\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport BackToAccount from './BackToAccount';\r\nimport SelectedMovie from './SelectedMovie';\r\nimport{useLocation} from 'react-router-dom'\r\nimport 'whatwg-fetch';\r\nimport Axios from 'axios';\r\nimport '../styles/SelectedMovies.css'\r\ntype ListCategory = 'Favorites' | 'WatchList';\r\n\r\ntype Movie = {\r\n    imdbID: string,\r\n    poster_url?: string,\r\n    title?: string\r\n}\r\n\r\nexport default function SelectedMovieList(props:any) {\r\n    const location: any = useLocation();\r\n    const userId = location.state.userId;\r\n    const category: ListCategory = location.state.category;\r\n    const[isLoading, setIsLoading] = useState(true);\r\n    const movieArr: Array<Movie> = [];\r\n    const[movies, setMovies] = useState(movieArr);\r\n\r\n    useEffect(() => {\r\n\r\n    fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/${category.toLowerCase()}/${userId}`, \r\n      {method: 'GET',\r\n      headers : { \r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n     }}) \r\n     .then(response => response.json())\r\n     .then(json => {\r\n         if(json.success) {\r\n             console.log(\"SUCCESS\");\r\n             if(movies.length === 0){\r\n                json.imdbs.forEach((imdb:string) => {\r\n                    Axios.get(`${process.env.REACT_APP_OMDB_URL}/?i=${imdb}&apikey=${process.env.REACT_APP_API_KEY}`)\r\n                    .then((response) =>{\r\n                        const movie={\r\n                            imdbID: imdb, \r\n                            title: response.data.Title, \r\n                            poster_url: response.data.Poster\r\n                        }\r\n                        if(!movies.includes(movie)){\r\n                        setMovies(prevState => (\r\n                            [...prevState, movie]\r\n                        ))}\r\n                    })\r\n                    .catch((error) =>\r\n                        console.log(`Error: ${error.message}`)\r\n                    )}\r\n                )\r\n            }\r\n     }\r\n     setIsLoading(false)\r\n    })\r\n     .catch(err=>{\r\n         console.log(`Error: ${err.message}`)\r\n     })\r\n\r\n     console.log(\"userId: \" + userId)\r\n    \r\n    }, [isLoading, movies])\r\n    function removeMovie(imdbID: string){\r\n        console.log(\"ImdbID: \" + imdbID)\r\n    }\r\n    if(isLoading ){\r\n        return(<div><p>Loading...</p></div>)\r\n    }\r\n \r\n    console.log(movies)\r\n    return (\r\n        <div className=\"container-fluid movie-app\">\r\n            <BackToAccount/>\r\n            <h3>My {category}</h3>\r\n            <div className=\"row\">\r\n            {movies.map((movie,index) =>{\r\n                return (\r\n                    <SelectedMovie movie={movie} category={category} userId={userId} movies={movies} setMovies={setMovies}/>\r\n                )\r\n            })}\r\n            </div>\r\n    \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useLocation} from 'react-router-dom';\r\nimport BackToAccount from './BackToAccount';\r\nimport 'whatwg-fetch';\r\nimport{\r\n  getFromStorage,\r\n} from '../utils/storage';\r\nimport Axios from 'axios';\r\nimport \"../styles/MovieDetails.css\"\r\nexport default function MovieDetails() {\r\n    const location: any = useLocation();\r\n    const[isLoading, setIsLoading] = useState(true);\r\n    const[isFavorited, setIsFavorited] = useState(false);\r\n    const[isOnWatchlist, setIsOnWatchlist] = useState(false)\r\n    const movieDetails = location.state.movieDetails;\r\n\r\n    useEffect(() =>{\r\n      const obj = getFromStorage('the_main_app');\r\n      if(obj && obj.token){\r\n        const {token} = obj;\r\n      \r\n      fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/movies/${location.state.userId}/${location.state.imdbID}`,\r\n      {method: 'GET',\r\n      headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n         }\r\n      })\r\n      .then(res=>res.json())\r\n      .then(json => {\r\n        console.log(json.message)\r\n        if(json.success){\r\n          setIsLoading(false);\r\n          setIsFavorited(json.isFavorited);\r\n          setIsOnWatchlist(json.isOnWatchlist);\r\n        }\r\n        else{\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((err:any) => {\r\n        console.log(`Error: ${err.message}`)\r\n      })\r\n    }\r\n    }, [ isOnWatchlist, isFavorited])\r\n    function toggleAddToFavorites(e:any){\r\n      e.preventDefault();\r\n      setIsLoading(true);\r\n      fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/movies/${location.state.userId}/add-movie/${location.state.imdbID}`,\r\n      {method: 'POST',\r\n      headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n         }\r\n      })\r\n      .then(res=>res.json())\r\n      .then(json => {\r\n        console.log(json.message)\r\n        if(json.success){\r\n          // TODO: write fetch api request\r\n\r\n          fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/movies/${location.state.userId}/set-favorites/${location.state.imdbID}`,\r\n          {method: 'PUT',\r\n          headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          })\r\n          .then(res=> res.json())\r\n          .then(json=> {\r\n            if(json.success){\r\n              setIsFavorited(!isFavorited);\r\n            }\r\n            setIsLoading(false)\r\n            \r\n          })\r\n          .catch(err => {\r\n            console.log(`Error: ${err.message}`)\r\n          })\r\n        }\r\n        else{\r\n          console.log(json.message)\r\n        }\r\n      })\r\n      .catch((err:any) => {\r\n        console.log(`Error: ${err.message}`)\r\n      })\r\n    }\r\n    function toggleAddToWatchlist(e:any){\r\n      e.preventDefault();\r\n      fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/movies/${location.state.userId}/add-movie/${location.state.imdbID}`,\r\n      {method: 'POST',\r\n      headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n         }\r\n      })\r\n      .then(res=>res.json())\r\n      .then(json => {\r\n        console.log(json.message)\r\n        if(json.success){\r\n          // TODO: write fetch api request\r\n\r\n          fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/movies/${location.state.userId}/set-watchlist/${location.state.imdbID}`,\r\n          {method: 'PUT',\r\n          headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          })\r\n          .then(res=> res.json())\r\n          .then(json=> {\r\n            setIsOnWatchlist(!isOnWatchlist);\r\n          })\r\n          .catch(err => {\r\n            console.log(`Error: ${err.message}`)\r\n          })\r\n        }\r\n        else{\r\n          console.log(json.message)\r\n        }\r\n      })\r\n      .catch((err:any) => {\r\n        console.log(`Error: ${err.message}`)\r\n      })\r\n    }\r\n    if(isLoading){\r\n      return(<div><p>Loading...</p></div>)\r\n    }\r\n    return (\r\n      <>\r\n      <BackToAccount/>\r\n        <div className=\"card movie-details movie-card\">\r\n          <img className=\"card-img-top\" src={movieDetails.Poster} alt=\"Card image cap\"/>\r\n          <div className=\"card-body details bg-dark\">\r\n            <h5 className=\"card-title text-warning\">{movieDetails.Title} - {movieDetails.Year} <span className=\"badge bg-danger m-2 float-right\">{movieDetails.Rated}</span></h5>\r\n            <p className=\"card-text\">\r\n              Plot :  {movieDetails.Plot}<br/><br/>\r\n              Released :  {movieDetails.Released}<br/>\r\n              Runtime :  {movieDetails.Runtime}<br/>\r\n              Genre :  {movieDetails.Genre}<br/>\r\n              Director :  {movieDetails.Director}<br/>\r\n              Writer :  {movieDetails.Writer}<br/>\r\n              Actors :  {movieDetails.Actors}<br/>\r\n              Language :  {movieDetails.Language}<br/>\r\n              Country :  {movieDetails.Country}<br/>\r\n              Awards :  {movieDetails.Awards}<br/>\r\n            </p>\r\n            <div className=\"form-group row m-2\">\r\n            {\r\n                      (isOnWatchlist)?\r\n                      (<button className=\"btn btn-secondary m-2\" onClick={toggleAddToWatchlist} > Watchlisted</button>):\r\n                      (<button className=\"btn btn-warning m-2\" onClick={toggleAddToWatchlist}> Add to Watchlist</button>)\r\n\r\n            }\r\n                    {\r\n                      (isFavorited)?\r\n                      (<button className=\"btn btn-success m-2\" onClick = {toggleAddToFavorites}> Favorited</button>):\r\n                      (<button className=\"btn btn-danger m-2\" onClick = {toggleAddToFavorites}> Add to Favorites</button>)\r\n\r\n                    }\r\n            </div>\r\n        </div>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer id=\"footer\">\r\n            <div className=\"container bg-dark text-white text-center\">\r\n                <span className=\"text-muted\">Made by Maria Vyatkina</span> \r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useLocation} from 'react-router'; \r\nimport '../styles/PasswordReset.css'\r\n\r\nexport default function PasswordReset() {\r\n    const location: any = useLocation();\r\n    const userId = location.state.userId;\r\n    console.log(\"location.state = \" + userId)\r\n    const[isLoading, setIsLoading] = useState(false);\r\n    const[password, setPassword] = useState(\"\");\r\n    const[newPassword, setNewPassword] = useState(\"\");\r\n    const[resetPasswordError, setResetPasswordError] = useState(\"\");\r\n    const[isReset, setIsReset] = useState(false);\r\n    const[passwordShown, setPasswordShown]= useState(false);\r\n\r\n    function onTextboxChangePassword(event: any) {\r\n        setPassword(event.target.value);\r\n    }\r\n    function onTextboxChangeNewPassword(event: any) {\r\n        setNewPassword(event.target.value);\r\n    }\r\n    function toggleShowPassword(e:any){\r\n        e.preventDefault();\r\n        setPasswordShown(!passwordShown);\r\n      }\r\n    function togglePasswordReset(){\r\n        setIsLoading(true);\r\n        fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/${userId}`, {\r\n            method: 'PUT',\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n               },\r\n            body: JSON.stringify({\r\n                password: password,\r\n                new_password: newPassword\r\n            })\r\n        })\r\n        .then(res=> res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                console.log(json.message);\r\n                alert(json.message);\r\n                setIsLoading(false);\r\n                setIsReset(true);\r\n            }\r\n            else{\r\n                setIsLoading(false);\r\n                console.log(json.message);\r\n            }\r\n        })\r\n        .catch((err:any) => {\r\n            console.log(`Error ${err.message}`);\r\n        })\r\n    }\r\n    if(isLoading){\r\n        return(<div><p>Loading...</p></div>)\r\n    }\r\n    if(isReset){\r\n        return(\r\n        <Redirect to=\"/account\"/>\r\n          );\r\n    }\r\n    return (\r\n        <div className=\"card password-reset bg-secondary mt-3 mb-3\">\r\n            <div className=\"card-header\">\r\n                Password Reset\r\n            </div>\r\n            <div className=\"card-body\">\r\n            {\r\n                (resetPasswordError)\r\n                ?(<h1 className=\"text-white\">{resetPasswordError}</h1>)\r\n                : null\r\n            }\r\n            <form>\r\n            <div className=\"form-group row\">\r\n                    <label  className=\"col-form-label\">Enter Password</label>\r\n                    <div className=\"col\">\r\n                    <input  type={passwordShown ? \"text\" : \"password\"} className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\" onChange={onTextboxChangePassword}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label  className=\"col-form-label\">Enter New Password</label>\r\n                    <div className=\"col\">\r\n                    <input  type={passwordShown ? \"text\" : \"password\"} className=\"form-control\" id=\"inputNewPassword\" placeholder=\"New Password\" onChange={onTextboxChangeNewPassword}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <span\r\n                        className=\"badge mt-1 show-password-button\" \r\n                        onClick={toggleShowPassword}>\r\n                            {(passwordShown)?\r\n                            (\"Hide Password\")\r\n                            :(\"Show Password\")\r\n                            }\r\n                    </span>\r\n              </div>\r\n                <div className=\"form-group row \">\r\n                    <button className= \"btn btn-primary mt-3\" onClick={togglePasswordReset}>Reset Password</button>\r\n                </div>\r\n                </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport \"../styles/Movie.css\"\r\nimport Axios from 'axios';\r\nimport 'whatwg-fetch';\r\nimport{\r\n  getFromStorage,\r\n} from '../utils/storage';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Movie(props: any) {\r\n    \r\n    const[movieDetails, setMovieDetails] = useState({});\r\n    const[isLoading, setIsLoading] = useState(true);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const[isFavorited, setIsFavorited] = useState(false);\r\n    const[isOnWatchlist, setIsOnWatchlist] = useState(false)\r\n    useEffect(() =>{\r\n      const obj = getFromStorage('the_main_app');\r\n      if(obj && obj.token){\r\n        const {token} = obj;\r\n        Axios.get(`${process.env.REACT_APP_OMDB_URL}/?i=${props.movie.imdbID}&apikey=${process.env.REACT_APP_API_KEY}`)\r\n        .then((response) =>{\r\n        if(response.data.Response === \"True\"){ \r\n            setIsLoading(false);\r\n            setMovieDetails(response.data)\r\n        } \r\n        else{\r\n            setIsLoading(false);\r\n        }\r\n      }\r\n      )\r\n      .catch((error) =>{\r\n          setIsLoading(false);\r\n        console.log(`Error: ${error.message}`);\r\n      })\r\n      fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/account/user/${token}`, {\r\n          method: 'GET',\r\n          headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n             }\r\n          })\r\n          .then(res=> res.json())\r\n          .then(json => {\r\n              if(json.success){\r\n                  setUserId(json.userId);\r\n              }\r\n          })\r\n          .catch(err => {\r\n              console.log(\"error: \" + err)\r\n          })\r\n      console.log(\"fetched userId: \" + userId);\r\n      fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/movies/${userId}/${props.movie.imdbID}`,\r\n      {method: 'GET',\r\n      headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n         }\r\n      })\r\n      .then(res=>res.json())\r\n      .then(json => {\r\n        console.log(json.message)\r\n        if(json.success){\r\n          console.log(\"SUCCESS\")\r\n          setIsFavorited(json.isFavorited);\r\n          setIsOnWatchlist(json.isOnWatchlist);\r\n        }\r\n      })\r\n      .catch((err:any) => {\r\n        console.log(`Error: ${err.message}`)\r\n      })\r\n    }\r\n    }, [userId, isOnWatchlist, isFavorited])\r\n    function toggleAddToFavorites(e:any){\r\n      e.preventDefault();\r\n      fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/movies/${userId}/add-movie/${props.movie.imdbID}`,\r\n      {method: 'POST',\r\n      headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n         }\r\n      })\r\n      .then(res=>res.json())\r\n      .then(json => {\r\n        console.log(json.message)\r\n        if(json.success){\r\n          // TODO: write fetch api request\r\n\r\n          fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/movies/${userId}/set-favorites/${props.movie.imdbID}`,\r\n          {method: 'PUT',\r\n          headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          })\r\n          .then(res=> res.json())\r\n          .then(json=> {\r\n            setIsFavorited(!isFavorited);\r\n          })\r\n          .catch(err => {\r\n            console.log(`Error: ${err.message}`)\r\n          })\r\n        }\r\n        else{\r\n          console.log(json.message)\r\n        }\r\n      })\r\n      .catch((err:any) => {\r\n        console.log(`Error: ${err.message}`)\r\n      })\r\n    }\r\n    function toggleAddToWatchlist(e:any){\r\n      e.preventDefault();\r\n      fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/movies/${userId}/add-movie/${props.movie.imdbID}`,\r\n      {method: 'POST',\r\n      headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n         }\r\n      })\r\n      .then(res=>res.json())\r\n      .then(json => {\r\n        console.log(json.message)\r\n        if(json.success){\r\n          // TODO: write fetch api request\r\n\r\n          fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/api/movies/${userId}/set-watchlist/${props.movie.imdbID}`,\r\n          {method: 'PUT',\r\n          headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          })\r\n          .then(res=> res.json())\r\n          .then(json=> {\r\n            setIsOnWatchlist(!isOnWatchlist);\r\n          })\r\n          .catch(err => {\r\n            console.log(`Error: ${err.message}`)\r\n          })\r\n        }\r\n        else{\r\n          console.log(json.message)\r\n        }\r\n      })\r\n      .catch((err:any) => {\r\n        console.log(`Error: ${err.message}`)\r\n      })\r\n    }\r\n    if(isLoading){\r\n        return(<div><p>Loading...</p></div>);\r\n    }\r\n    return (\r\n        <div className=\" col-5 card movie-card\">\r\n        <img className=\"card-img-top\" src={props.movie.Poster} alt=\"Card image cap\"/>\r\n        <div className=\"card-body bg-dark\">\r\n          <h5 className=\"card-title\">{props.movie.Title}</h5>\r\n          <p className=\"card-text\">\r\n              Release Year: {props.movie.Year}<br/>\r\n                Type: {props.movie.Type}\r\n          </p>\r\n          <div className=\"row m-1 mb-2 pt-2 pb-2\">\r\n          <Link  className=\"btn btn-primary\" to={{pathname:\"/account/browse-movies/movie-details\", state:{movieDetails: movieDetails, imdbID: props.movie.imdbID, userId: userId }}}>Details</Link>\r\n          </div>\r\n              <div className=\"row m-1\">\r\n              {\r\n                      (isOnWatchlist)?\r\n                      (<button className=\"btn btn-secondary\" onClick={toggleAddToWatchlist}> Watchlisted</button>):\r\n                      (<button className=\"btn btn-warning\" onClick={toggleAddToWatchlist}> Add to Watchlist</button>)\r\n\r\n                    }\r\n              </div>\r\n              <div className=\"row m-1\">\r\n                    {\r\n                      (isFavorited)?\r\n                      (<button className=\"btn btn-success\" onClick={toggleAddToFavorites}> Favorited</button>):\r\n                      (<button className=\"btn btn-danger\" onClick={toggleAddToFavorites}> Add to Favorites</button>)\r\n\r\n                    }\r\n              </div>\r\n    \r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Movie from './Movie'\r\n\r\nexport default function MovieList(props: any) {\r\n\r\n        const movieList = props.movies.filter((movie:any)=>\r\n        (movie.Poster !== \"N/A\")\r\n        ).map((movie: any) =>{\r\n             return <Movie movie={movie}/>\r\n        })\r\n\r\n        return(\r\n            <div>\r\n            <h5 className=\"text-light text-center pt-3 pb-3\">{\r\n                (props.isSearched)?\r\n                (\"Search Results:\"):\r\n                (\"Your search results will be displayed here\")\r\n                } </h5>\r\n            <div className=\"row movie-list\">\r\n                {movieList}\r\n            </div>\r\n            </div>\r\n        )\r\n\r\n    \r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport MovieList from './MovieList';\r\nimport Axios from 'axios';\r\nimport '../styles/BrowseMovies.css'\r\nimport BackToAccount from './BackToAccount';\r\nexport default function BrowseMovies() {\r\n    \r\n    const [movieTitle, setMovieTitle] = useState(\"\");\r\n    const [movies, setMovies] = useState([]);\r\n    const[isLoading, setIsLoading] = useState(false);\r\n    const[isSearched, setIsSearched] = useState(false);\r\n\r\n    function onSearchBarChange(event: any) {\r\n        setMovieTitle(event.target.value);\r\n        console.log(\"Current MT: \" + movieTitle);\r\n    }\r\n\r\n    function toggleSearchMovies(){\r\n        setIsLoading(true);\r\n        setIsSearched(true);\r\n        Axios.get(`${process.env.REACT_APP_OMDB_URL}/?s=${movieTitle}&apikey=${process.env.REACT_APP_API_KEY}`)\r\n        .then((response) =>{\r\n        console.log(response.data);\r\n        if(response.data.Response === \"True\"){ \r\n            setIsLoading(false);\r\n            setMovies(response.data.Search)\r\n        } \r\n        else{\r\n            setIsLoading(false);\r\n        }\r\n      }\r\n      )\r\n      .catch((error) =>{\r\n          setIsLoading(false);\r\n        console.log(`Error: ${error.message}`);\r\n      })\r\n    }\r\n    if(isLoading){\r\n        return(<div><p>Loading...</p></div>)\r\n    }\r\n    return (\r\n        <div className=\"browse-movies\">\r\n            <BackToAccount/>\r\n           <div>\r\n            <div className=\"input-group m-2\">\r\n                 <input type=\"search\" className=\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\r\n                    aria-describedby=\"search-addon\" onChange={onSearchBarChange}/>\r\n                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={toggleSearchMovies}>Search Movies</button>\r\n             </div>  \r\n             <MovieList movies={movies} isSearched={isSearched}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './styles/App.css';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Link, BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Header from './components/Header'\r\nimport Account from './components/Account'\r\nimport SignIn from './components/SignIn';\r\nimport SignUp from './components/SignUp';\r\nimport Home from './components/Home';\r\nimport SelectedMovieList from './components/SelectedMovieList';\r\nimport MovieDetails from './components/MovieDetails';\r\nimport Footer from './components/Footer';\r\nimport PasswordReset from './components/PasswordReset';\r\nimport BrowseMovies from './components/BrowseMovies';\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App container-fluid bg-dark\">\r\n    <Header/>\r\n    <Switch>\r\n          <Route path=\"/signin\">\r\n            <SignIn/>\r\n          </Route>\r\n          <Route path=\"/signup\">\r\n            <SignUp/>\r\n          </Route>\r\n          <Route path=\"/account/password-reset\">\r\n            <PasswordReset/>\r\n          </Route>\r\n          <Route path=\"/account/browse-movies/movie-details\">\r\n            <MovieDetails/>\r\n          </Route>\r\n          <Route path=\"/account/browse-movies\">\r\n            <BrowseMovies/>\r\n          </Route>\r\n          <Route path=\"/account/favorites\">\r\n            <SelectedMovieList/>\r\n          </Route>\r\n          <Route path=\"/account/watchlist\">\r\n          <SelectedMovieList/>\r\n          </Route>\r\n          <Route path=\"/account\">\r\n            <Account/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home/>\r\n          </Route>\r\n        </Switch>\r\n    <Footer/>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}